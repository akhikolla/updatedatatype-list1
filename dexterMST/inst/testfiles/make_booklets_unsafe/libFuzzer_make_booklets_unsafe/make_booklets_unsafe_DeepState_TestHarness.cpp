// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// make_booklets_unsafe_DeepState_TestHarness_generation.cpp and make_booklets_unsafe_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List make_booklets_unsafe(const IntegerVector& person_id, IntegerVector& booklet_id, const IntegerVector& module_nbr, const IntegerVector& item_id, const IntegerVector& item_score, IntegerVector& booklet_score, IntegerVector& include_rsp, const IntegerVector& bk_nmod);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector person_id  = RcppDeepState_IntegerVector();
  std::string person_id_t = "/home/akhila/fuzzer_packages/fuzzedpackages/dexterMST/inst/testfiles/make_booklets_unsafe/libFuzzer_make_booklets_unsafe/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_person_id.qs";
  qs::c_qsave(person_id,person_id_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "person_id values: "<< person_id << std::endl;
  IntegerVector booklet_id  = RcppDeepState_IntegerVector();
  std::string booklet_id_t = "/home/akhila/fuzzer_packages/fuzzedpackages/dexterMST/inst/testfiles/make_booklets_unsafe/libFuzzer_make_booklets_unsafe/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_booklet_id.qs";
  qs::c_qsave(booklet_id,booklet_id_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "booklet_id values: "<< booklet_id << std::endl;
  IntegerVector module_nbr  = RcppDeepState_IntegerVector();
  std::string module_nbr_t = "/home/akhila/fuzzer_packages/fuzzedpackages/dexterMST/inst/testfiles/make_booklets_unsafe/libFuzzer_make_booklets_unsafe/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_module_nbr.qs";
  qs::c_qsave(module_nbr,module_nbr_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "module_nbr values: "<< module_nbr << std::endl;
  IntegerVector item_id  = RcppDeepState_IntegerVector();
  std::string item_id_t = "/home/akhila/fuzzer_packages/fuzzedpackages/dexterMST/inst/testfiles/make_booklets_unsafe/libFuzzer_make_booklets_unsafe/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_item_id.qs";
  qs::c_qsave(item_id,item_id_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "item_id values: "<< item_id << std::endl;
  IntegerVector item_score  = RcppDeepState_IntegerVector();
  std::string item_score_t = "/home/akhila/fuzzer_packages/fuzzedpackages/dexterMST/inst/testfiles/make_booklets_unsafe/libFuzzer_make_booklets_unsafe/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_item_score.qs";
  qs::c_qsave(item_score,item_score_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "item_score values: "<< item_score << std::endl;
  IntegerVector booklet_score  = RcppDeepState_IntegerVector();
  std::string booklet_score_t = "/home/akhila/fuzzer_packages/fuzzedpackages/dexterMST/inst/testfiles/make_booklets_unsafe/libFuzzer_make_booklets_unsafe/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_booklet_score.qs";
  qs::c_qsave(booklet_score,booklet_score_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "booklet_score values: "<< booklet_score << std::endl;
  IntegerVector include_rsp  = RcppDeepState_IntegerVector();
  std::string include_rsp_t = "/home/akhila/fuzzer_packages/fuzzedpackages/dexterMST/inst/testfiles/make_booklets_unsafe/libFuzzer_make_booklets_unsafe/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_include_rsp.qs";
  qs::c_qsave(include_rsp,include_rsp_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "include_rsp values: "<< include_rsp << std::endl;
  IntegerVector bk_nmod  = RcppDeepState_IntegerVector();
  std::string bk_nmod_t = "/home/akhila/fuzzer_packages/fuzzedpackages/dexterMST/inst/testfiles/make_booklets_unsafe/libFuzzer_make_booklets_unsafe/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_bk_nmod.qs";
  qs::c_qsave(bk_nmod,bk_nmod_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "bk_nmod values: "<< bk_nmod << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    make_booklets_unsafe(person_id,booklet_id,module_nbr,item_id,item_score,booklet_score,include_rsp,bk_nmod);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
