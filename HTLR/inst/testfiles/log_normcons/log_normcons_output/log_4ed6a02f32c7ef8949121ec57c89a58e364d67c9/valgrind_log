<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./log_normcons_DeepState_TestHarness --input_test_file /home/akhila/fuzzer_packages/fuzzedpackages/HTLR/inst/testfiles/log_normcons/log_normcons_output/4ed6a02f32c7ef8949121ec57c89a58e364d67c9.pass</line>
</preamble>

<pid>2348317</pid>
<ppid>2348316</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/akhila/fuzzer_packages/fuzzedpackages/HTLR/inst/testfiles/log_normcons/log_normcons_output/log_4ed6a02f32c7ef8949121ec57c89a58e364d67c9/valgrind_log</arg>
    <arg>--tool=memcheck</arg>
    <arg>--leak-check=yes</arg>
  </vargv>
  <argv>
    <exe>./log_normcons_DeepState_TestHarness</exe>
    <arg>--input_test_file</arg>
    <arg>/home/akhila/fuzzer_packages/fuzzedpackages/HTLR/inst/testfiles/log_normcons/log_normcons_output/4ed6a02f32c7ef8949121ec57c89a58e364d67c9.pass</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.025 </time>
</status>


<status>
  <state>FINISHED</state>
  <time>00:00:00:07.380 </time>
</status>

<error>
  <unique>0x62</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>320 bytes in 1 blocks are definitely lost in loss record 99 of 1,284</text>
    <leakedbytes>320</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483E0F0</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>memalign</fn>
    </frame>
    <frame>
      <ip>0x483E212</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>posix_memalign</fn>
    </frame>
    <frame>
      <ip>0x410215</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/HTLR/inst/testfiles/log_normcons/log_normcons_DeepState_TestHarness</obj>
      <fn>double* arma::memory::acquire&lt;double&gt;(unsigned long long)</fn>
      <dir>/home/akhila</dir>
      <file>R/x86_64-pc-linux-gnu-library/4.0/RcppArmadillo/include/armadillo_bits/memory.hpp</file>
      <line>73</line>
    </frame>
    <frame>
      <ip>0x4100A7</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/HTLR/inst/testfiles/log_normcons/log_normcons_DeepState_TestHarness</obj>
      <fn>arma::Mat&lt;double&gt;::init_cold()</fn>
      <dir>/home/akhila</dir>
      <file>R/x86_64-pc-linux-gnu-library/4.0/RcppArmadillo/include/armadillo_bits/Mat_meat.hpp</file>
      <line>225</line>
    </frame>
    <frame>
      <ip>0x40C769</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/HTLR/inst/testfiles/log_normcons/log_normcons_DeepState_TestHarness</obj>
      <fn>arma::Mat&lt;double&gt;::Mat(unsigned long long, unsigned long long)</fn>
      <dir>/home/akhila</dir>
      <file>R/x86_64-pc-linux-gnu-library/4.0/RcppArmadillo/include/armadillo_bits/Mat_meat.hpp</file>
      <line>71</line>
    </frame>
    <frame>
      <ip>0x407517</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/HTLR/inst/testfiles/log_normcons/log_normcons_DeepState_TestHarness</obj>
      <fn>RcppDeepState_mat()</fn>
      <dir>/home/akhila</dir>
      <file>R/x86_64-pc-linux-gnu-library/4.0/RcppDeepState/include/RcppDeepState.h</file>
      <line>214</line>
    </frame>
    <frame>
      <ip>0x407931</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/HTLR/inst/testfiles/log_normcons/log_normcons_DeepState_TestHarness</obj>
      <fn>DeepState_Test__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/HTLR/inst/testfiles/log_normcons</dir>
      <file>log_normcons_DeepState_TestHarness.cpp</file>
      <line>17</line>
    </frame>
    <frame>
      <ip>0x4078C8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/HTLR/inst/testfiles/log_normcons/log_normcons_DeepState_TestHarness</obj>
      <fn>DeepState_Run__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/HTLR/inst/testfiles/log_normcons</dir>
      <file>log_normcons_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x414418</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/HTLR/inst/testfiles/log_normcons/log_normcons_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x4146B9</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/HTLR/inst/testfiles/log_normcons/log_normcons_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x414794</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/HTLR/inst/testfiles/log_normcons/log_normcons_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x4053D5</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/HTLR/inst/testfiles/log_normcons/log_normcons_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>


<status>
  <state>FINISHED</state>
  <time>00:00:00:07.870 </time>
</status>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

